apply plugin: "com.android.library"
apply plugin: "com.github.dcendents.android-maven"
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'maven-publish'

def packageName = 'cc.cloudist.acplibrary'
def libraryVersion = '1.2.2'
version = "1.2.2"

repositories {
    jcenter()
}

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 21
        versionCode 1
        versionName "1.2.2"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
}

def siteUrl = 'https://github.com/hanshihai/ACProgressLite'
def gitUrl = 'https://github.com/hanshihai/ACProgressLite.git'
group = "cc.cloudist.acplibrary"
install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                // Add your description here
                name 'Android ACProgressLite Widget Library'
                url siteUrl
                // Set your license
                licenses { // 许可类型，后面也有
                    license {
                        name 'The MIT License'
                        url 'http://mit-license.org'
                    }
                }
                developers {
                    developer {
                        id 'cloudist'
                        name 'cloudist'
                        email 'd@cloudist.cc'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

publishing {
    publications {
        aar(MavenPublication) {
            groupId packageName
            version = libraryVersion
            artifactId project.getName()

            // Tell maven to prepare the generated "* .aar" file for publishing
            artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")

            //The publication doesn't know about our dependencies, so we have to manually add them to the pom
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.compile.allDependencies.each {
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', 'com.android.support')
                    dependencyNode.appendNode('artifactId', 'appcompat-v7')
                    dependencyNode.appendNode('version', '22.0.0')
                    dependencyNode.appendNode('scope', 'compile')
                }
            }
        }
    }
}

artifactory {
    contextUrl = 'http://repo.utui.me'
    publish {
        repository {
            // The Artifactory repository key to publish to
            repoKey = 'utui-releases'

            username = repoUser
            password = repoPassword
        }
        defaults {
            // Tell the Artifactory Plugin which artifacts should be published to Artifactory.
            publications('aar')
            publishArtifacts = true

            // Properties to be attached to the published artifacts.
            // properties = ['qa.level': 'basic', 'dev.team': 'core']
            // Publish generated POM files to Artifactory (true by default)
            publishPom = true
        }
    }
}

//Properties properties = new Properties()
//properties.load(project.rootProject.file('local.properties').newDataInputStream())
//
//bintray {
//    user = properties.getProperty("bintray.user")
//    key = properties.getProperty("bintray.apikey")
//    configurations = ['archives']
//    pkg {
//        repo = "maven"
//        name = "ACProgressLite"
//        websiteUrl = siteUrl
//        vcsUrl = gitUrl
//        licenses = ["MIT"]
//        publish = true
//    }
//}

